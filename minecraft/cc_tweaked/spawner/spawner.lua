---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by devingardner.
--- DateTime: 3/2/24 11:29 AM
---

-- setting monitor and getting arguments
monitor = peripheral.find("monitor")
monitor.setTextScale(0.5)
local args = {...}
local dev_func = require("dev_func")

dev_func.clearMon(monitor)

if #args == 1 then
    if args[1] == "open" then
        local currentVal = rs.getBundledOutput("right")
        currentVal = currentVal + 8
        rs.setBundledOutput("right", currentVal)
        return
    elseif args[1] == "close" then
        local currentVal = rs.getBundledOutput("right")
        currentVal = currentVal - 8
        rs.setBundledOutput("right", currentVal)
        return
    elseif args[1] == "default" then
        -- default val
        val = 4112
        -- setting fans
        monitor.setTextColor(4096)
        monitor.write("fans: ")
        val = val - 4096
        monitor.setTextColor(32)
        monitor.write("True")
        monitor.setTextColor(1)
        dev_func.newLine(monitor)
        -- setting mashers
        monitor.setTextColor(16)
        monitor.write("masher: ")
        val = val - 16
        monitor.setTextColor(32)
        monitor.write("True")
        monitor.setTextColor(1)
        dev_func.newLine(monitor)
        -- setting skeleton
        monitor.setTextColor(16384)
        monitor.write("skeleton: ")
        val = val + 16384
        monitor.setTextColor(32)
        monitor.write("True")
        monitor.setTextColor(1)
        dev_func.newLine(monitor)
        -- setting zombie
        monitor.setTextColor(1024)
        monitor.write("zombie: ")
        val = val + 1024
        monitor.setTextColor(32)
        monitor.write("True")
        monitor.setTextColor(1)
        dev_func.newLine(monitor)
        -- no spider
        monitor.setTextColor(1)
        monitor.write("spider: ")
        monitor.setTextColor(16384)
        monitor.write("False")
        monitor.setTextColor(1)
        dev_func.newLine(monitor)
        -- setting enderman
        monitor.setTextColor(8192)
        monitor.write("enderman: ")
        val = val + 8192
        monitor.setTextColor(32)
        monitor.write("True")
        monitor.setTextColor(1)
        dev_func.newLine(monitor)
        -- setting wither skeleton
        monitor.setTextColor(64)
        monitor.write("wither skeleton: ")
        val = val + 64
        monitor.setTextColor(32)
        monitor.write("True")
        monitor.setTextColor(1)
        dev_func.newLine(monitor)
        -- no ravager
        monitor.setTextColor(512)
        monitor.write("ravager: ")
        monitor.setTextColor(16384)
        monitor.write("False")
        monitor.setTextColor(1)
        dev_func.newLine(monitor)
        -- no piglin brute
        monitor.setTextColor(4)
        monitor.write("piglin brute: ")
        monitor.setTextColor(16384)
        monitor.write("False")
        monitor.setTextColor(1)
        dev_func.newLine(monitor)
        -- setting val and returning
        rs.setBundledOutput("right", val)
        return
    else
        dev_func.showHelp(monitor)
        return
    end
end

if #args < 9 then
    -- display help message
    dev_func.showHelp(monitor)
    return
else
    -- getting input variables
    val = 4112
    local inp_fans = args[1]
    local inp_masher = args[2]
    local inp_skeleton = args[3]
    local inp_zombie = args[4]
    local inp_spider = args[5]
    --local inp_shulker = args[6]
    local inp_ender = args[6]
    local inp_wither_skeleton = args[7]
    local inp_ravager = args[8]
    local inp_brute = args[9]

    -- fans
    monitor.setTextColor(4096)
    monitor.write("fans: ")
    if inp_fans == "1" then
        val = val - 4096
        monitor.setTextColor(32)
        monitor.write("True")
        monitor.setTextColor(1)
        dev_func.newLine(monitor)
    else
        monitor.setTextColor(16384)
        monitor.write("False")
        monitor.setTextColor(1)
        dev_func.newLine(monitor)
    end

    -- masher
    monitor.setTextColor(16)
    monitor.write("masher: ")
    if inp_masher == "1" then
        val = val - 16
        monitor.setTextColor(32)
        monitor.write("True")
        monitor.setTextColor(1)
        dev_func.newLine(monitor)
    else
        monitor.setTextColor(16384)
        monitor.write("False")
        monitor.setTextColor(1)
        dev_func.newLine(monitor)
    end

    -- skeleton
    monitor.setTextColor(16384)
    monitor.write("skeleton: ")
    if inp_skeleton == "1" then
        val = val + 16384
        monitor.setTextColor(32)
        monitor.write("True")
        monitor.setTextColor(1)
        dev_func.newLine(monitor)
    else
        monitor.setTextColor(16384)
        monitor.write("False")
        monitor.setTextColor(1)
        dev_func.newLine(monitor)
    end

    -- zombie
    monitor.setTextColor(1024)
    monitor.write("zombie: ")
    if inp_zombie == "1" then
        val = val + 1024
        monitor.setTextColor(32)
        monitor.write("True")
        monitor.setTextColor(1)
        dev_func.newLine(monitor)
    else
        monitor.setTextColor(16384)
        monitor.write("False")
        monitor.setTextColor(1)
        dev_func.newLine(monitor)
    end

    -- spider
    monitor.setTextColor(1)
    monitor.write("spider: ")
    if inp_spider == "1" then
        val = val + 32768
        monitor.setTextColor(32)
        monitor.write("True")
        monitor.setTextColor(1)
        dev_func.newLine(monitor)
    else
        monitor.setTextColor(16384)
        monitor.write("False")
        monitor.setTextColor(1)
        dev_func.newLine(monitor)
    end

    -- shulker
    --monitor.setTextColor(128)
    --monitor.write("shulker: ")
    --if inp_shulker == "1" then
    --    val = val + 128
    --    monitor.setTextColor(32)
    --    monitor.write("True")
    --    monitor.setTextColor(1)
    --    newLine(monitor)
    --else
    --    monitor.setTextColor(16384)
    --    monitor.write("False")
    --    monitor.setTextColor(1)
    --    newLine(monitor)
    --end

    -- enderman
    monitor.setTextColor(8192)
    monitor.write("enderman: ")
    if inp_ender == "1" then
        val = val + 8192
        monitor.setTextColor(32)
        monitor.write("True")
        monitor.setTextColor(1)
        dev_func.newLine(monitor)
    else
        monitor.setTextColor(16384)
        monitor.write("False")
        monitor.setTextColor(1)
        dev_func.newLine(monitor)
    end

    -- wither skeleton
    monitor.setTextColor(64)
    monitor.write("wither skeleton: ")
    if inp_wither_skeleton == "1" then
        val = val + 64
        monitor.setTextColor(32)
        monitor.write("True")
        monitor.setTextColor(1)
        dev_func.newLine(monitor)
    else
        monitor.setTextColor(16384)
        monitor.write("False")
        monitor.setTextColor(1)
        dev_func.newLine(monitor)
    end

    -- ravager
    monitor.setTextColor(512)
    monitor.write("ravager: ")
    if inp_ravager == "1" then
        val = val + 512
        monitor.setTextColor(32)
        monitor.write("True")
        monitor.setTextColor(1)
        dev_func.newLine(monitor)
    else
        monitor.setTextColor(16384)
        monitor.write("False")
        monitor.setTextColor(1)
        dev_func.newLine(monitor)
    end

     -- piglin brute
    monitor.setTextColor(4)
    monitor.write("piglin brute: ")
    if inp_brute == "1" then
        val = val + 4
        monitor.setTextColor(32)
        monitor.write("True")
        monitor.setTextColor(1)
        dev_func.newLine(monitor)
    else
        monitor.setTextColor(16384)
        monitor.write("False")
        monitor.setTextColor(1)
        dev_func.newLine(monitor)
    end

    rs.setBundledOutput("right", val)
end
